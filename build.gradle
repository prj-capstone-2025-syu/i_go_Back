plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    // 명시적으로 사용할 Jackson 버전 지정
    jacksonVersion = '2.14.2'  // Spring Boot 3.4.5와 호환되는 버전
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    // Jackson 라이브러리 버전 강제 지정
    all {
        // 강제로 모든 Jackson 관련 의존성을 지정된 버전으로 변경
        resolutionStrategy {
            force "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
            force "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
            force "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
            force "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
            force "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
            force "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}"

            // 다른 라이브러리가 사용하는 Jackson 의존성도 통일
            eachDependency { DependencyResolveDetails details ->
                if (details.requested.group == 'com.fasterxml.jackson.core' ||
                    details.requested.group == 'com.fasterxml.jackson.datatype' ||
                    details.requested.group == 'com.fasterxml.jackson.module' ||
                    details.requested.group == 'com.fasterxml.jackson.dataformat') {
                    details.useVersion jacksonVersion
                }
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // 개발 도구
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    // 데이터베이스
    runtimeOnly 'com.mysql:mysql-connector-j'

    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Google & Firebase
    implementation 'com.google.api-client:google-api-client:2.2.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-calendar:v3-rev20220715-2.0.0'
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // Jackson 의존성 - 명시적 버전 정의
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    implementation "com.fasterxml.jackson.module:jackson-module-parameter-names:${jacksonVersion}"
}

tasks.named('test') {
    useJUnitPlatform()
}

// Commons Logging 제외 설정
configurations.all {
    exclude group: 'commons-logging', module: 'commons-logging'
}